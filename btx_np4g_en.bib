@Article{saito:11,
author = "Narumi Saito",
title ="Logical thinking based on mathematical views and ways of thinking (in Japanese)",
journal = "Research in educational practice and development, Gunma University",
year = 2011,
volume = 28,
pages = "31--37"
}
@book {Ito,
author = "Seiji Ito",
yomi = "Seiji Ito",
title = "Basics of Genetic Algorithms (in Japanese)",
publisher = "Ohmsha",
year = 1995,
}
@Article{dartmouth,
  author = "John McCarthy and Marvin L. Minsky and Nathaniel Rochester and Claude E. Shannon",
  title = "A Proposal for the Dartmouth Summer Research Project on Artificial Intelligence, August 31, 1955",
  journal = "AI Magazine",
  year = 2006,
  volume = 27,
  number = 4,
}
@article{LogicTheorist,
author = {Leo Gugerty},
title ={Newell and Simon's Logic Theorist: Historical Background and Impact on Cognitive Modeling},
journal = {Proceedings of the Human Factors and Ergonomics Society Annual Meeting},
volume = {50},
number = {9},
pages = {880-884},
year = {2006},
doi = {10.1177/154193120605000904},
URL = {https://doi.org/10.1177/154193120605000904},
eprint = {https://doi.org/10.1177/154193120605000904},
abstract = { Fifty years ago, Newell and Simon (1956) invented a “thinking machine” called the Logic Theorist. The Logic Theorist was a computer program that could prove theorems in symbolic logic from Whitehead and Russell's Principia Mathematica. This was perhaps the first working program that simulated some aspects of peoples' ability to solve complex problems. The Logic Theorist and other cognitive simulations developed by Newell and Simon in the late 1950s had a large impact on the newly developing field of information-processing (or cognitive) psychology. Many of the novel ideas about mental representation and problem solving instantiated in the Logic Theorist are still a central part of the theory of cognitive psychology, and are still used in modeling the complex tasks studied in human factors psychology. This paper presents some of the theoretical precursors of the Logic Theorist, describes the principles and implementation of the program, and discusses its immediate and long-term impacts. }
}
@article{tsukimoto:00,
author=" Hiroshi Tsukimoto",
title="Pattern Reasoning: Logical Reasoning of Neural Networks",
journal="The IEICE transactions on information and systems. Pt. 2",
ISSN="09151923",
publisher="The Institute of Electronics, Information and Communication Engineers",
year="2000",
month="feb",
volume="00083",
number="00002",
pages="744-753",
URL="https://ci.nii.ac.jp/naid/110003183723/",
DOI="",
}
@article{sudo:07,
title= {Pattern Based Reasoning Machine Capable of Online Incremental Learning}, 
author= {Akito Sudo and Akihiro Sato and Osamu Hasegawa},
journal= {The 21st Annual Conference of the Japanese Society for Artificial Intelligence},
volume={JSAI07},
number={ },
pages={3E94-3E94},
year={2007},
doi={10.11517/pjsai.JSAI07.0_3E94}
}
@article{gnp,
title = "Genetic network programming - application to intelligent agents",
abstract = "Recently many studies have been made on automatic design of the complex systems by using the evolutionary optimization techniques such as Genetic Algorithms (GA), Evolution Strategy (ES), Evolutionary Programming (EP) and Genetic Programming (GP). It is generally recognized that these techniques are very useful for optimizing fairly complex systems such as generation of intelligent behavior sequences of robots. In this paper, a new method named Genetic network Programming (GNP) is proposed in order to acquire these behavior sequences efficiently. GNP is composed of plural nodes for agents to execute simple judgment/processing and they are connected with each other to form a network structure. Agents behave according to the contents of the nodes and their connections in GNP. In order to obtain better structure, GNP changes itself by using evolutionary optimization techniques.",
author = "H. Katagiri and K. Hirasawa and J. Hu",
year = "2000",
month = dec,
day = "1",
language = "English",
volume = "5",
pages = "3829--3834",
journal = "Proceedings of the IEEE International Conference on Systems, Man and Cybernetics",
issn = "0884-3627",
publisher = "Institute of Electrical and Electronics Engineers Inc.",
note = "2000 IEEE International Conference on Systems, Man and Cybernetics ; Conference date: 08-10-2000 Through 11-10-2000",
}
@book{adfs,
author = "Koza, John R.",
title = "Genetic programming II : automatic discovery of reusable programs",
publisher = "MIT Press",
year = 1992,
}
@Misc{copilot,
  title        = "{GitHub Copilot}",
howpublished = "\url{https://copilot.github.com/}"
}
@article{gpt3,
author    = {Tom B. Brown and
Benjamin Mann and
Nick Ryder and
Melanie Subbiah and
Jared Kaplan and
Prafulla Dhariwal and
Arvind Neelakantan and
Pranav Shyam and
Girish Sastry and
Amanda Askell and
Sandhini Agarwal and
Ariel Herbert{-}Voss and
Gretchen Krueger and
Tom Henighan and
Rewon Child and
Aditya Ramesh and
Daniel M. Ziegler and
Jeffrey Wu and
Clemens Winter and
Christopher Hesse and
Mark Chen and
Eric Sigler and
Mateusz Litwin and
Scott Gray and
Benjamin Chess and
Jack Clark and
Christopher Berner and
Sam McCandlish and
Alec Radford and
Ilya Sutskever and
Dario Amodei},
  title     = {Language Models are Few-Shot Learners},
  journal   = {CoRR},
  volume    = {abs/2005.14165},
  year      = {2020},
  url       = {https://arxiv.org/abs/2005.14165},
  eprinttype = {arXiv},
  eprint    = {2005.14165},
  timestamp = {Wed, 03 Jun 2020 11:36:54 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/abs-2005-14165.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{KnowledgeAI,
title={Knowledge acquisition: issues, techniques, and methodology},
author={Yihwa Irene Liou},
booktitle={SIGBDP '90},
year={1990}
}
@article{TENENBAUM2006,
title = {Theory-based Bayesian models of inductive learning and reasoning},
journal = {Trends in Cognitive Sciences},
volume = {10},
number = {7},
pages = {309-318},
year = {2006},
note = {Special issue: Probabilistic models of cognition},
issn = {1364-6613},
doi = {https://doi.org/10.1016/j.tics.2006.05.009},
url = {https://www.sciencedirect.com/science/article/pii/S1364661306001343},
author = {Joshua B. Tenenbaum and Thomas L. Griffiths and Charles Kemp},
abstract = {Inductive inference allows humans to make powerful generalizations from sparse data when learning about word meanings, unobserved properties, causal relationships, and many other aspects of the world. Traditional accounts of induction emphasize either the power of statistical learning, or the importance of strong constraints from structured domain knowledge, intuitive theories or schemas. We argue that both components are necessary to explain the nature, use and acquisition of human knowledge, and we introduce a theory-based Bayesian framework for modeling inductive learning and reasoning as statistical inferences over structured knowledge representations.}
}
@inproceedings{hodohara2012reinforcement,
title={Reinforcement learning with phased approach for fast learning},
author={Hodohara, Norifumi and Murakami, Yuichi and Nakamura, Shingo and Hashimoto, Shuji},
booktitle={Proceedings of the International Symposium on Artificial Life and Robotics (AROB 17th'12)},
pages={930--933},
year={2012}
}
@book{StructuredProgramming,
author = {Linger, Richard C. and Witt, Bernard I. and Mills, H. D.},
title = {Structured Programming; Theory and Practice the Systems Programming Series},
page = {118},
year = {1979},
isbn = {0201144611},
publisher = {Addison-Wesley Longman Publishing Co., Inc.},
address = {USA},
edition = {1st}
}
@incollection{AutomaticProgramming,
title = {Chapter X - Automatic Programming},
author = {Avron Barr and Edward A. Feigenbaum},
booktitle = {The Handbook of Artificial Intelligence},
publisher = {Butterworth-Heinemann},
pages = {295-379},
year = {1982},
isbn = {978-0-86576-090-5},
doi = {https://doi.org/10.1016/B978-0-86576-090-5.50010-0},
url = {https://www.sciencedirect.com/science/article/pii/B9780865760905500100},
abstract = {Publisher Summary
Automatic programming (AP) is the automation of some part of the programming process. As an application of artificial intelligence (AI), AP research has achieved some success with experimental systems that help programmers manage large programs or that produce small programs from some specification of what they are to do—besides the code itself. Programming can be defined as specifying the method for doing something the computer can do in terms the computer can interpret. In the simplest case, programmers code the steps of algorithms they want the machine to perform in terms of its hard-wired primitives for adding, subtracting, and moving numbers. However, very few programmers really program that way any more. The first step toward automatic programming was the development of compilers. The first FORTRAN compiler was even billed as an “automatic programming” system. Automatic programming research in AI, then, refers to systems that assist humans in some aspect of programming. Each of these systems has four identifying characteristics: a specification method, a target language, a problem area, and an approach or method of operation.}
}
@article{palsql,
  author    = {Keita Takenouchi and
               Takashi Ishio and
               Joji Okada and
               Yuji Sakata},
  title     = {{PATSQL:} Efficient Synthesis of {SQL} Queries from Example Tables
               with Quick Inference of Projected Columns},
  journal   = {CoRR},
  volume    = {abs/2010.05807},
  page = {106},
  year      = {2020},
  url       = {https://arxiv.org/abs/2010.05807},
  eprinttype = {arXiv},
  eprint    = {2010.05807},
  timestamp = {Tue, 20 Oct 2020 15:08:10 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/abs-2010-05807.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
@book{ math300,
author= "Nakahara, Tadao",
title="Basic knowledge of arithmetic course in mathematics important term 300 (in Japanese)", 
publisher = "Meijitoshoshuppan",
year= "2000",
}
@mastersthesis{BlackBoxProblem,
author = {Hussain, Jabbar},
institution = {Uppsala University, Department of Informatics and Media},
pages = {59},
school = {Uppsala University, Department of Informatics and Media},
title = {Deep Learning Black Box Problem},
keywords = {Deep Learning, Artificial Neural Network, Black Box, Inductive Logic Programming, Knowledge Discovery, First-Order Logic, and Machine Learning},
abstract = {Application of neural networks in deep learning is rapidly growing due to their ability to outperform other machine learning algorithms in different kinds of problems. But one big disadvantage of deep neural networks is its internal logic to achieve the desired output or result that is un-understandable and unexplainable. This behavior of the deep neural network is known as “black box”. This leads to the following questions: how prevalent is the black box problem in the research literature during a specific period of time? The black box problems are usually addressed by socalled rule extraction. The second research question is: what rule extracting methods have been proposed to solve such kind of problems? To answer the research questions, a systematic literature review was conducted for data collection related to topics, the black box, and the rule extraction. The printed and online articles published in higher ranks journals and conference proceedings were selected to investigate and answer the research questions. The analysis unit was a set of journals and conference proceedings articles related to the topics, the black box, and the rule extraction. The results conclude that there has been gradually increasing interest in the black box problems with the passage of time mainly because of new technological development. The thesis also provides an overview of different methodological approaches used for rule extraction methods. },
year = {2019}
}
@inproceedings{KAIssues,
author = {Wagner, William P.},
title = {Issues in Knowledge Acquisition},
year = {1990},
isbn = {0897914163},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/97709.97728},
doi = {10.1145/97709.97728},
booktitle = {Proceedings of the 1990 ACM SIGBDP Conference on Trends and Directions in Expert Systems},
pages = {247–261},
numpages = {15},
location = {Orlando, Florida, USA},
series = {SIGBDP '90}
}
@article {inductive-reasoning,
title= {Program Synthesis by Inductive Inference and Analogical Reasoning},
author= {Setsuo Arikawa},
journal= {Artificial Intelligence},
volume={2},
number={3},
pages={299-306},
year={1987},
doi={10.11517/jjsai.2.3_299}
}
@article{CASE1983193,
title = {Comparison of identification criteria for machine inductive inference},
journal = {Theoretical Computer Science},
volume = {25},
number = {2},
pages = {193-220},
year = {1983},
issn = {0304-3975},
doi = {https://doi.org/10.1016/0304-3975(83)90061-0},
url = {https://www.sciencedirect.com/science/article/pii/0304397583900610},
author = {John Case and Carl Smith},
abstract = {A natural ωpLω+1 hierarchy of successively more general criteria of success for inductive inference machines is described based on the size of sets of anomalies in programs synthesized by such machines. These criteria are compared to others in the literature. Some of our results are interpreted as tradeoff results or as showing the inherent relative-computational complexity of certain processes and others are interpreted from a positivistic, mechanistic philosophical stance as theorems in philosophy of science. The techniques of recursive function theory are employed including ordinary and infinitary recursion theorems.}
}
@ARTICLE{4767034,  author={Michalski, Ryszard S.},  journal={IEEE Transactions on Pattern Analysis and Machine Intelligence},   title={Pattern Recognition as Rule-Guided Inductive Inference},   year={1980},  volume={PAMI-2},  number={4},  pages={349-361},  doi={10.1109/TPAMI.1980.4767034}}
@article{Koza1994,
doi = {10.1007/bf00175355},
url = {https://doi.org/10.1007%2Fbf00175355},
year = 1994,
month = {jun},
publisher = {Springer Science and Business Media {LLC}},
volume = {4},
number = {2},
author = {JohnR. Koza},
title = {Genetic programming as a means for programming computers by natural selection},
journal = {Statistics and Computing}
}